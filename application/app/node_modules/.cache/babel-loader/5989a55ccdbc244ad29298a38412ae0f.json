{"remainingRequest":"/Users/mac/文稿/fyp/GcoinProject/application/app/node_modules/babel-loader/lib/index.js!/Users/mac/文稿/fyp/GcoinProject/application/app/node_modules/eslint-loader/index.js??ref--13-0!/Users/mac/文稿/fyp/GcoinProject/application/app/js/gcoin.js","dependencies":[{"path":"/Users/mac/文稿/fyp/GcoinProject/application/app/js/gcoin.js","mtime":1605433480082},{"path":"/Users/mac/文稿/fyp/GcoinProject/application/app/node_modules/cache-loader/dist/cjs.js","mtime":1605374860662},{"path":"/Users/mac/文稿/fyp/GcoinProject/application/app/node_modules/babel-loader/lib/index.js","mtime":1605374860476},{"path":"/Users/mac/文稿/fyp/GcoinProject/application/app/node_modules/eslint-loader/index.js","mtime":1605374862725}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/mac/文稿/fyp/GcoinProject/application/app/js/gcoin.js"],"names":["Web3","GcoinArtifact","Gcoin","web3","account","meta","start","eth","net","getId","networkId","deployedNetwork","networks","Contract","abi","address","setAccount","console","error","transfer","to","document","getElementById","value","parseInt","setStatus","methods","call","refreshBalance","transferFrom","from","approve","spender","allowance","owner","balanceOf","balance","balanceElements","getElementsById","innerHTML","idx","getAccounts","accounts","length","message","status","window","addEventListener","providers","HttpProvider"],"mappings":"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","sourcesContent":["import Web3 from \"web3\";\nimport GcoinArtifact from \"../../build/contracts/Gcoin.json\";\n\nconst Gcoin = {\n\tweb3: null,\n\taccount: null,\n\tmeta: null,\n\n\tstart: async function() {\n\t\tconst { web3 } = this;\n\n\t\ttry {\n\t\t\t// get contract instance\n\t\t\tconst networkId = await web3.eth.net.getId();\n\t\t\tconst deployedNetwork = GcoinArtifact.networks[networkId];\n\t\t\tthis.meta = new web3.eth.Contract(\n\t\t\t\tGcoinArtifact.abi, \n\t\t\t\tdeployedNetwork.address,\n\t\t\t);\n\n\t\t\t// get account\n\t\t\tthis.setAccount(0);\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Could not connect to contract or chain.\");\n\t\t}\n\t},\n\n/*\n\tname: async function() {\n\t\tconst { name } = this.meta.methods;\n\t\tconst contractName = await name().call();\n\t\t\n\t\t// update page\n\t},\n\n\tsymbol: async function() {\n\t\tconst { symbol } = this.meta.methods;\n\t\tconst contractSymbol = await name().call();\n\t\t\n\t\t// update page\n\t},\n\n\tdecimals: async function() {\n\t\tconst { decimals } = this.meta.methods;\n\t\tconst contractDecimals = await decimals().call();\n\t\t\n\t\t// update page\n\t},\n\n\ttotalSupply: async function() {\n\t\tconst { totalSupply } = this.meta.methods;\n\t\tconst supply = await totalSupply().call();\n\t\t\n\t\t// update page\n\t},\n\n\tbalanceOf: async function() {\n\t\tconst owner = document.getElementById(\"balance-owner\").value;\n\t\tconst { balanceOf } = this.meta.methods;\n\t\tbalance = await balanceOf(owner).constall();\n\t\tconst balance = await balanceOf(owner).call();\n\t\t\n\t\t// update page\n\t},\n*/\n\n\ttransfer: async function() {\n\t\tconst to = document.getElementById(\"transfer-to\").value;\n\t\tconst value =  parseInt(document.getElementById(\"transfer-value\").value);\n\n\t\tthis.setStatus(\"Initiating transaction... (please wait)\");\n\n\t\tconst { transfer } = this.meta.methods;\n\t\tawait transfer(to, value).call();\n\n\t\tthis.setStatus(\"Transaction complete!\");\n\t\tthis.refreshBalance();\n\t},\n\n\ttransferFrom: async function() {\n\t\tconst from = document.getElementById(\"delegate-from\").value;\n\t\tconst to = document.getElementById(\"delegate-to\").value;\n\t\tconst value = parseInt(document.getElementById(\"delegate-value\").value);\n\n\t\tthis.setStatus(\"Initiating transaction... (please wait)\");\n\n\t\tconst { transferFrom } = this.meta.methods;\n\t\tawait transferFrom(from, to, value).call();\n\n\t\tthis.setStatus(\"Transaction complete!\");\n\t\tthis.refreshBalance();\n\t},\n\n\tapprove: async function() {\n\t\tconst spender = document.getElementById(\"approve-spender\").value;\n\t\tconst value = parseInt(document.getElementById(\"approve-value\").value);\n\n\t\tthis.setStatus(\"Processing... (please wait)\");\n\n\t\tconst { approve } = this.meta.methods;\n\t\tawait approve(spender, value).call();\n\n\t\tthis.setStatus(\"Complete!\");\n\t},\n\n\tallowance: async function() {\n\t\tconst spender = document.getElementById(\"allowance-spender\").value;\n\t\tconst owner = document.getElementById(\"allowance-owner\").value;\n\n\t\tconst { allowance } = this.meta.methods;\n\t\tawait allowance(owner, spender).call();\n\t},\n\n\trefreshBalance: async function() {\n\t\tconst { balanceOf } = this.meta.methods;\n\t\tconst balance = await balanceOf(this.account).call();\n\n\t\t// update page\n\t\tconst balanceElements = document.getElementsById(\"balance\");\n\t\tbalanceElements.innerHTML = balance;\n\t},\n\n\tsetAccount: async function(idx) {\n\t\tconst { web3 } = this;\n\t\t\n\t\tconst accounts = await web3.eth.getAccounts();\n\t\tif (idx <= accounts.length && idx >= 0) {\n\t\t\tthis.account = accounts[idx];\n\t\t} else {\n\t\t\tthis.account = accounts[0];\n\t\t}\n\t},\n\n\tsetStatus: function(message) {\n\t\t// update page\n\t\tconst status = document.getElementById(\"status\");\n\t\tstatus.innerHTML = message;\n\t},\n\n}\n\nwindow.addEventListener(\"load\", function() {\n\tGcoin.web3 = new Web3(\n\t\tnew Web3.providers.HttpProvider(\"http://127.0.0.1:7545\"),\n\t);\n\n\tGcoin.start();\n})\n\n\n\n"]}]}